version: "3"

services:
  turbine-api:
    container_name: turbine-api
    image: turbine/api
    build:
      context: ../..
      dockerfile: docker/dev/turbine-api.Dockerfile
    ports:
      - "80:80"
    depends_on:
      - postgres
    env_file: .env
    command: uvicorn turbine.api.app:app --reload --host 0.0.0.0 --port 80
    volumes:
      - ../..:/turbine-api
    restart: always

  ngrok:
    container_name: ngrok
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "start"
      - "api"
    volumes:
      - ./ngrok.yml:/var/lib/ngrok/ngrok.yml
    ports:
      - "4040:4040"

  postgres:
    image: postgres:latest
    container_name: turbine-postgres
    environment:
      POSTGRES_DB: turbine
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: passwd
    ports:
      - "5432:5432"

  turbine-worker:
    container_name: turbine-worker
    image: turbine/worker
    build:
      context: ../..
      dockerfile: docker/dev/turbine-worker.Dockerfile
    env_file: .env
    command: celery --app turbine.worker.worker worker --loglevel=INFO
    volumes:
      - ../..:/turbine-worker
    restart: always

  rabbitmq:
    container_name: rabbitmq
    image: "rabbitmq:management"
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    container_name: redis
    image: "bitnami/redis:latest"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
