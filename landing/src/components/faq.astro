---
const faqs = [
	{
		title: "How does Turbine help in building Generative AI applications?",
		description: "To get accurate answers from an LLM model such as ChatGPT, you need to provide all the required information in the prompt itself. But since LLMs can take a limited amount of text in its prompt, you can not dump all the information in it. Turbine solves this problem by letting you store all the information in your database, and then retrieve the most relevant information for each prompt in real-time using semantic search. This allows you to build more accurate and efficient Generative AI applications."
	},
	{
		title: "How does Turbine’s semantic search differ from traditional database searches?",
		description: "Traditional database searches rely on exact matches or pattern-based queries. Turbine’s semantic search, on the other hand, understands the meaning and context of data, allowing for more relevant and nuanced search results."
	},
	{
		title: "Which types of databases are compatible with Turbine?",
		description: "Turbine supports both SQL and NoSQL databases, with support coming for non-database data sources as well. As of now, Turbine is compatible with PostgreSQL, MongoDB and MySQL."
	},
	{
		title: "How does Turbine ensure the freshness of the search results?",
		description: "Turbine continuously fetches changes from your database using state-of-the-art CDC—Change data capture—methods, ensuring that the search results always reflect the most recent and relevant data."
	},
	{
		title: "What are vector embeddings and how do they enhance the search experience?",
		description: "Vector embeddings are mathematical representations of data that capture their semantic meaning. By converting your data into these embeddings, Turbine allows for similarity-based searching which provides more contextual and relevant results compared to traditional methods."
	},
	{
		title: "How secure is Turbine? What measures are taken to protect my data and the generated embeddings?",
		description: "Turbine itself does not store any of your data or embeddings. It only stores the metadata required to perform the search operations. All the data are stored in your database, and the embeddings are stored in cloud solutions of the respective vector databases, Turbine only accesses them when a search query is made. This ensures that your data is always secure and protected."
	},
	{
		title: "Can I integrate Turbine with other applications or platforms I’m using?",
		description: "Yes, Turbine is designed to be compatible with a wide range of platforms and applications. It provides Python, TypeScript and REST APIs, and can be integrated with any application with a few lines of code."
	},
	{
		title: "Can I integrate Turbine with my LangChain application?",
		description: "Yes, integrating Turbine with LangChain is very easy, you only need a few lines of code. Our team is always available to help you with the integration, we are also working on a plugin to make the integration even easier."
	},
	{
		title: "What is context-aware splitting and how does it help in building more accurate Generative AI applications?",
		description: "Context-aware splitting is a technique that allows you to split your data into multiple documents. It takes into consideration the context and structure of the text and the information within in, so that each document is as coherent and self-contained as possible. It's critical to run a effective context-aware splitting over unstructured data before storing them for semantic search. This helps in creating more relevant context for the LLM, which in turn helps in generating more accurate answers. Turbine provides context-aware splitting for unstructured data out-of-the-box which provides optimal results for usage in LLMs."
	},
	{
		title: "Why should I use Turbine instead of developing my own semantic search system?",
		description: "Developing Turbine's features in-house is a massive undertaking, which requires substantial engineering time, resources, and expertise. Maintaining and scaling it is even more challenging. Turbine uses state-of-the-art technologies in each of its components, and is designed to scale. It lets you focus on the core business logic of your AI applications, without worrying about the underlying infrastructure."
	},
	{
		title: "How do I get started with Turbine? Is there a trial period or demo available?",
		description: "We do offer a free trial period. Book a call with us, we will discuss your use-case and help you get started with Turbine."
	},
];

const title = "Frequently Asked Questions";
---

<div class="mx-auto max-w-5xl mt-10 px-6 py-12 sm:py-18 lg:px-8 lg:py-24 dark:bg-stone-950" id="faq">
	<div class="mx-auto divide-y divide-gray-900/10 dark:divide-gray-100/10">
		<h2 class="text-2xl font-bold leading-10 tracking-tight text-gray-900 dark:text-white">{title}</h2>
		<dl class="mt-10 space-y-6 divide-y divide-gray-900/10 dark:divide-gray-100/10">
			{
				faqs.map((faq) => (
					<div class="pt-6" x-data="{ open: false }">
						<dt>
							<button
								type="button"
								class="flex w-full items-start justify-between text-left text-gray-900 dark:text-white"
								@click="open = !open"
								:x-bind:aria-expanded="open.toString()">
								<span class="text-base font-semibold leading-7">{faq.title}</span>
								<span class="ml-6 flex h-7 items-center">
									<svg
										class="h-6 w-6"
										fill="none"
										viewBox="0 0 24 24"
										stroke-width="1.5"
										stroke="currentColor"
										aria-hidden="true"
										x-show="!open">
										<path stroke-linecap="round" stroke-linejoin="round" d="M12 6v12m6-6H6"></path>
									</svg>
									<svg
										class="h-6 w-6"
										fill="none"
										viewBox="0 0 24 24"
										stroke-width="1.5"
										stroke="currentColor"
										aria-hidden="true"
										x-show="open">
										<path stroke-linecap="round" stroke-linejoin="round" d="M18 12H6"></path>
									</svg>
								</span>
							</button>
						</dt>
						<dd
							x-transition:enter="transition ease-out duration-100"
							x-transition:enter-start="opacity-0 transform scale-90"
							x-transition:enter-end="opacity-100 transform scale-100"
							x-transition:leave="transition ease-in duration-100"
							x-transition:leave-start="opacity-100 transform scale-100"
							x-transition:leave-end="opacity-0 transform scale-90"
							class="mt-2 pr-12"
							id="faq-0"
							x-show="open">
							<span class="text-base leading-7 text-gray-600 dark:text-gray-100">
								<span set:html={faq.description}></span>
							</span>
						</dd>
					</div>
				))
			}
		</dl>
	</div>
</div>
