---
const faqs = [
	{
		title: "What is LLM context? How to fine-tune LLM.",
		description: "Any LLM model needs to align to the specific nuances and requirements. This is almost always an input along with prompt. Since prompt is limited, it becomes very important to choose correct context. Which adheres to your per-query fine-tuning needs. It serves as a foundational aspect in enhancing the accuracy and relevance of the model's output. If you have ~2-3 cases, fine-tuning it by re-training LLM is good (given you have time and resources). If you want to use LLM for your per user needs (exceeding >= 3 contextual data) Then context is a must. Turbine's context designing takes care of all that under the hood..",
	},
	{
		title: "How important is chunking? Does it really matter.",
		description: "Chunking means to divide up data before storing it in a way that makes semantic searching over data easier. It plays a critical role in managing and processing large sets of data more efficiently. Our auto-chunking algorithmcally finds the sweet spots and iteratively adjust it according to your searches. This not only speeds up the data retrieval process but also helps in maintaining data accuracy."	},
	{
		title: "Why use a third-party and why not tell my dev to implement it on our own?",
		description: `Developing this kind of system in-house is a massive undertaking, which requires substantial time, resources, expertise. Utilizing Turbine is not game done, but it allows developers to focus on other critical areas without the hefty investment of building and maintaining it yourself. Turbine is built with specialized expertise and is pre-tailored to adhere to nuanced needs. Designed to scale`,
	},
	{
		title: "Do you have a free trial?",
		description: "Yes. Contact us and we'll get you started.",
	},
];

const title = "Frequently Asked Questions";
---

<div class="mx-auto max-w-5xl mt-10 px-6 py-12 sm:py-18 lg:px-8 lg:py-24 dark:bg-stone-950" id="faq">
	<div class="mx-auto divide-y divide-gray-900/10 dark:divide-gray-100/10">
		<h2 class="text-2xl font-bold leading-10 tracking-tight text-gray-900 dark:text-white">{title}</h2>
		<dl class="mt-10 space-y-6 divide-y divide-gray-900/10 dark:divide-gray-100/10">
			{
				faqs.map((faq) => (
					<div class="pt-6" x-data="{ open: false }">
						<dt>
							<button
								type="button"
								class="flex w-full items-start justify-between text-left text-gray-900 dark:text-white"
								@click="open = !open"
								:x-bind:aria-expanded="open.toString()">
								<span class="text-base font-semibold leading-7">{faq.title}</span>
								<span class="ml-6 flex h-7 items-center">
									<svg
										class="h-6 w-6"
										fill="none"
										viewBox="0 0 24 24"
										stroke-width="1.5"
										stroke="currentColor"
										aria-hidden="true"
										x-show="!open">
										<path stroke-linecap="round" stroke-linejoin="round" d="M12 6v12m6-6H6"></path>
									</svg>
									<svg
										class="h-6 w-6"
										fill="none"
										viewBox="0 0 24 24"
										stroke-width="1.5"
										stroke="currentColor"
										aria-hidden="true"
										x-show="open">
										<path stroke-linecap="round" stroke-linejoin="round" d="M18 12H6"></path>
									</svg>
								</span>
							</button>
						</dt>
						<dd
							x-transition:enter="transition ease-out duration-100"
							x-transition:enter-start="opacity-0 transform scale-90"
							x-transition:enter-end="opacity-100 transform scale-100"
							x-transition:leave="transition ease-in duration-100"
							x-transition:leave-start="opacity-100 transform scale-100"
							x-transition:leave-end="opacity-0 transform scale-90"
							class="mt-2 pr-12"
							id="faq-0"
							x-show="open">
							<span class="text-base leading-7 text-gray-600 dark:text-gray-100">
								<span set:html={faq.description}></span>
							</span>
						</dd>
					</div>
				))
			}
		</dl>
	</div>
</div>
